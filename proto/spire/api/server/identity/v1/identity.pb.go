// Code generated by protoc-gen-go. DO NOT EDIT.
// source: spire/api/server/identity/v1/identity.proto

package identity

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	types "github.com/spiffe/spire/proto/spire/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExchangeRequest struct {
	// Types that are valid to be assigned to Step:
	//	*ExchangeRequest_Params_
	//	*ExchangeRequest_X509Request
	//	*ExchangeRequest_JwtRequest
	Step                 isExchangeRequest_Step `protobuf_oneof:"step"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ExchangeRequest) Reset()         { *m = ExchangeRequest{} }
func (m *ExchangeRequest) String() string { return proto.CompactTextString(m) }
func (*ExchangeRequest) ProtoMessage()    {}
func (*ExchangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_25379ce627d0c156, []int{0}
}

func (m *ExchangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeRequest.Unmarshal(m, b)
}
func (m *ExchangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeRequest.Marshal(b, m, deterministic)
}
func (m *ExchangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeRequest.Merge(m, src)
}
func (m *ExchangeRequest) XXX_Size() int {
	return xxx_messageInfo_ExchangeRequest.Size(m)
}
func (m *ExchangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeRequest proto.InternalMessageInfo

type isExchangeRequest_Step interface {
	isExchangeRequest_Step()
}

type ExchangeRequest_Params_ struct {
	Params *ExchangeRequest_Params `protobuf:"bytes,1,opt,name=params,proto3,oneof"`
}

type ExchangeRequest_X509Request struct {
	X509Request *X509Request `protobuf:"bytes,2,opt,name=x509Request,proto3,oneof"`
}

type ExchangeRequest_JwtRequest struct {
	JwtRequest *JWTRequest `protobuf:"bytes,3,opt,name=jwtRequest,proto3,oneof"`
}

func (*ExchangeRequest_Params_) isExchangeRequest_Step() {}

func (*ExchangeRequest_X509Request) isExchangeRequest_Step() {}

func (*ExchangeRequest_JwtRequest) isExchangeRequest_Step() {}

func (m *ExchangeRequest) GetStep() isExchangeRequest_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (m *ExchangeRequest) GetParams() *ExchangeRequest_Params {
	if x, ok := m.GetStep().(*ExchangeRequest_Params_); ok {
		return x.Params
	}
	return nil
}

func (m *ExchangeRequest) GetX509Request() *X509Request {
	if x, ok := m.GetStep().(*ExchangeRequest_X509Request); ok {
		return x.X509Request
	}
	return nil
}

func (m *ExchangeRequest) GetJwtRequest() *JWTRequest {
	if x, ok := m.GetStep().(*ExchangeRequest_JwtRequest); ok {
		return x.JwtRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExchangeRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExchangeRequest_Params_)(nil),
		(*ExchangeRequest_X509Request)(nil),
		(*ExchangeRequest_JwtRequest)(nil),
	}
}

type ExchangeRequest_Params struct {
	// The exchange data
	Data                 *ExchangeData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ExchangeRequest_Params) Reset()         { *m = ExchangeRequest_Params{} }
func (m *ExchangeRequest_Params) String() string { return proto.CompactTextString(m) }
func (*ExchangeRequest_Params) ProtoMessage()    {}
func (*ExchangeRequest_Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_25379ce627d0c156, []int{0, 0}
}

func (m *ExchangeRequest_Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeRequest_Params.Unmarshal(m, b)
}
func (m *ExchangeRequest_Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeRequest_Params.Marshal(b, m, deterministic)
}
func (m *ExchangeRequest_Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeRequest_Params.Merge(m, src)
}
func (m *ExchangeRequest_Params) XXX_Size() int {
	return xxx_messageInfo_ExchangeRequest_Params.Size(m)
}
func (m *ExchangeRequest_Params) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeRequest_Params.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeRequest_Params proto.InternalMessageInfo

func (m *ExchangeRequest_Params) GetData() *ExchangeData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ExchangeResponse struct {
	// Types that are valid to be assigned to Step:
	//	*ExchangeResponse_X509Result
	//	*ExchangeResponse_JwtResult
	//	*ExchangeResponse_Challenge
	Step                 isExchangeResponse_Step `protobuf_oneof:"step"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ExchangeResponse) Reset()         { *m = ExchangeResponse{} }
func (m *ExchangeResponse) String() string { return proto.CompactTextString(m) }
func (*ExchangeResponse) ProtoMessage()    {}
func (*ExchangeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_25379ce627d0c156, []int{1}
}

func (m *ExchangeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeResponse.Unmarshal(m, b)
}
func (m *ExchangeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeResponse.Marshal(b, m, deterministic)
}
func (m *ExchangeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeResponse.Merge(m, src)
}
func (m *ExchangeResponse) XXX_Size() int {
	return xxx_messageInfo_ExchangeResponse.Size(m)
}
func (m *ExchangeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeResponse proto.InternalMessageInfo

type isExchangeResponse_Step interface {
	isExchangeResponse_Step()
}

type ExchangeResponse_X509Result struct {
	X509Result *X509Result `protobuf:"bytes,1,opt,name=x509Result,proto3,oneof"`
}

type ExchangeResponse_JwtResult struct {
	JwtResult *JWTResult `protobuf:"bytes,2,opt,name=jwtResult,proto3,oneof"`
}

type ExchangeResponse_Challenge struct {
	Challenge []byte `protobuf:"bytes,3,opt,name=challenge,proto3,oneof"`
}

func (*ExchangeResponse_X509Result) isExchangeResponse_Step() {}

func (*ExchangeResponse_JwtResult) isExchangeResponse_Step() {}

func (*ExchangeResponse_Challenge) isExchangeResponse_Step() {}

func (m *ExchangeResponse) GetStep() isExchangeResponse_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (m *ExchangeResponse) GetX509Result() *X509Result {
	if x, ok := m.GetStep().(*ExchangeResponse_X509Result); ok {
		return x.X509Result
	}
	return nil
}

func (m *ExchangeResponse) GetJwtResult() *JWTResult {
	if x, ok := m.GetStep().(*ExchangeResponse_JwtResult); ok {
		return x.JwtResult
	}
	return nil
}

func (m *ExchangeResponse) GetChallenge() []byte {
	if x, ok := m.GetStep().(*ExchangeResponse_Challenge); ok {
		return x.Challenge
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExchangeResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExchangeResponse_X509Result)(nil),
		(*ExchangeResponse_JwtResult)(nil),
		(*ExchangeResponse_Challenge)(nil),
	}
}

type RenewRequest struct {
	// Types that are valid to be assigned to Step:
	//	*RenewRequest_X509Request
	//	*RenewRequest_JwtRequest
	Step                 isRenewRequest_Step `protobuf_oneof:"step"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RenewRequest) Reset()         { *m = RenewRequest{} }
func (m *RenewRequest) String() string { return proto.CompactTextString(m) }
func (*RenewRequest) ProtoMessage()    {}
func (*RenewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_25379ce627d0c156, []int{2}
}

func (m *RenewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewRequest.Unmarshal(m, b)
}
func (m *RenewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewRequest.Marshal(b, m, deterministic)
}
func (m *RenewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewRequest.Merge(m, src)
}
func (m *RenewRequest) XXX_Size() int {
	return xxx_messageInfo_RenewRequest.Size(m)
}
func (m *RenewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenewRequest proto.InternalMessageInfo

type isRenewRequest_Step interface {
	isRenewRequest_Step()
}

type RenewRequest_X509Request struct {
	X509Request *X509Request `protobuf:"bytes,1,opt,name=x509Request,proto3,oneof"`
}

type RenewRequest_JwtRequest struct {
	JwtRequest *JWTRequest `protobuf:"bytes,2,opt,name=jwtRequest,proto3,oneof"`
}

func (*RenewRequest_X509Request) isRenewRequest_Step() {}

func (*RenewRequest_JwtRequest) isRenewRequest_Step() {}

func (m *RenewRequest) GetStep() isRenewRequest_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (m *RenewRequest) GetX509Request() *X509Request {
	if x, ok := m.GetStep().(*RenewRequest_X509Request); ok {
		return x.X509Request
	}
	return nil
}

func (m *RenewRequest) GetJwtRequest() *JWTRequest {
	if x, ok := m.GetStep().(*RenewRequest_JwtRequest); ok {
		return x.JwtRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RenewRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RenewRequest_X509Request)(nil),
		(*RenewRequest_JwtRequest)(nil),
	}
}

type RenewResponse struct {
	// Types that are valid to be assigned to Step:
	//	*RenewResponse_X509Result
	//	*RenewResponse_JwtResult
	Step                 isRenewResponse_Step `protobuf_oneof:"step"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RenewResponse) Reset()         { *m = RenewResponse{} }
func (m *RenewResponse) String() string { return proto.CompactTextString(m) }
func (*RenewResponse) ProtoMessage()    {}
func (*RenewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_25379ce627d0c156, []int{3}
}

func (m *RenewResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewResponse.Unmarshal(m, b)
}
func (m *RenewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewResponse.Marshal(b, m, deterministic)
}
func (m *RenewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewResponse.Merge(m, src)
}
func (m *RenewResponse) XXX_Size() int {
	return xxx_messageInfo_RenewResponse.Size(m)
}
func (m *RenewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenewResponse proto.InternalMessageInfo

type isRenewResponse_Step interface {
	isRenewResponse_Step()
}

type RenewResponse_X509Result struct {
	X509Result *X509Result `protobuf:"bytes,1,opt,name=x509Result,proto3,oneof"`
}

type RenewResponse_JwtResult struct {
	JwtResult *JWTResult `protobuf:"bytes,2,opt,name=jwtResult,proto3,oneof"`
}

func (*RenewResponse_X509Result) isRenewResponse_Step() {}

func (*RenewResponse_JwtResult) isRenewResponse_Step() {}

func (m *RenewResponse) GetStep() isRenewResponse_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (m *RenewResponse) GetX509Result() *X509Result {
	if x, ok := m.GetStep().(*RenewResponse_X509Result); ok {
		return x.X509Result
	}
	return nil
}

func (m *RenewResponse) GetJwtResult() *JWTResult {
	if x, ok := m.GetStep().(*RenewResponse_JwtResult); ok {
		return x.JwtResult
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RenewResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RenewResponse_X509Result)(nil),
		(*RenewResponse_JwtResult)(nil),
	}
}

type X509Request struct {
	Params               *X509Request_X509SVIDParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *X509Request) Reset()         { *m = X509Request{} }
func (m *X509Request) String() string { return proto.CompactTextString(m) }
func (*X509Request) ProtoMessage()    {}
func (*X509Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_25379ce627d0c156, []int{4}
}

func (m *X509Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_X509Request.Unmarshal(m, b)
}
func (m *X509Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_X509Request.Marshal(b, m, deterministic)
}
func (m *X509Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_X509Request.Merge(m, src)
}
func (m *X509Request) XXX_Size() int {
	return xxx_messageInfo_X509Request.Size(m)
}
func (m *X509Request) XXX_DiscardUnknown() {
	xxx_messageInfo_X509Request.DiscardUnknown(m)
}

var xxx_messageInfo_X509Request proto.InternalMessageInfo

func (m *X509Request) GetParams() *X509Request_X509SVIDParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type X509Request_X509SVIDParams struct {
	// TODO: For both requests, how about provide an SPIFFE ID?
	Csr                  []byte   `protobuf:"bytes,1,opt,name=csr,proto3" json:"csr,omitempty"`
	Ttl                  int32    `protobuf:"varint,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *X509Request_X509SVIDParams) Reset()         { *m = X509Request_X509SVIDParams{} }
func (m *X509Request_X509SVIDParams) String() string { return proto.CompactTextString(m) }
func (*X509Request_X509SVIDParams) ProtoMessage()    {}
func (*X509Request_X509SVIDParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_25379ce627d0c156, []int{4, 0}
}

func (m *X509Request_X509SVIDParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_X509Request_X509SVIDParams.Unmarshal(m, b)
}
func (m *X509Request_X509SVIDParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_X509Request_X509SVIDParams.Marshal(b, m, deterministic)
}
func (m *X509Request_X509SVIDParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_X509Request_X509SVIDParams.Merge(m, src)
}
func (m *X509Request_X509SVIDParams) XXX_Size() int {
	return xxx_messageInfo_X509Request_X509SVIDParams.Size(m)
}
func (m *X509Request_X509SVIDParams) XXX_DiscardUnknown() {
	xxx_messageInfo_X509Request_X509SVIDParams.DiscardUnknown(m)
}

var xxx_messageInfo_X509Request_X509SVIDParams proto.InternalMessageInfo

func (m *X509Request_X509SVIDParams) GetCsr() []byte {
	if m != nil {
		return m.Csr
	}
	return nil
}

func (m *X509Request_X509SVIDParams) GetTtl() int32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

type JWTRequest struct {
	Params               *JWTRequest_JWTSVIDParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *JWTRequest) Reset()         { *m = JWTRequest{} }
func (m *JWTRequest) String() string { return proto.CompactTextString(m) }
func (*JWTRequest) ProtoMessage()    {}
func (*JWTRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_25379ce627d0c156, []int{5}
}

func (m *JWTRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JWTRequest.Unmarshal(m, b)
}
func (m *JWTRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JWTRequest.Marshal(b, m, deterministic)
}
func (m *JWTRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JWTRequest.Merge(m, src)
}
func (m *JWTRequest) XXX_Size() int {
	return xxx_messageInfo_JWTRequest.Size(m)
}
func (m *JWTRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JWTRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JWTRequest proto.InternalMessageInfo

func (m *JWTRequest) GetParams() *JWTRequest_JWTSVIDParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type JWTRequest_JWTSVIDParams struct {
	// TODO: For both requests, how about provide an SPIFFE ID?
	Audience             []string `protobuf:"bytes,1,rep,name=audience,proto3" json:"audience,omitempty"`
	Ttl                  int32    `protobuf:"varint,2,opt,name=Ttl,proto3" json:"Ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JWTRequest_JWTSVIDParams) Reset()         { *m = JWTRequest_JWTSVIDParams{} }
func (m *JWTRequest_JWTSVIDParams) String() string { return proto.CompactTextString(m) }
func (*JWTRequest_JWTSVIDParams) ProtoMessage()    {}
func (*JWTRequest_JWTSVIDParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_25379ce627d0c156, []int{5, 0}
}

func (m *JWTRequest_JWTSVIDParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JWTRequest_JWTSVIDParams.Unmarshal(m, b)
}
func (m *JWTRequest_JWTSVIDParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JWTRequest_JWTSVIDParams.Marshal(b, m, deterministic)
}
func (m *JWTRequest_JWTSVIDParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JWTRequest_JWTSVIDParams.Merge(m, src)
}
func (m *JWTRequest_JWTSVIDParams) XXX_Size() int {
	return xxx_messageInfo_JWTRequest_JWTSVIDParams.Size(m)
}
func (m *JWTRequest_JWTSVIDParams) XXX_DiscardUnknown() {
	xxx_messageInfo_JWTRequest_JWTSVIDParams.DiscardUnknown(m)
}

var xxx_messageInfo_JWTRequest_JWTSVIDParams proto.InternalMessageInfo

func (m *JWTRequest_JWTSVIDParams) GetAudience() []string {
	if m != nil {
		return m.Audience
	}
	return nil
}

func (m *JWTRequest_JWTSVIDParams) GetTtl() int32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

//  TODO: MOVE TO TYPES
type ExchangeData struct {
	// The type of the exchange data.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// The exchanging data payload. For JWT it must include
	Payload              string   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeData) Reset()         { *m = ExchangeData{} }
func (m *ExchangeData) String() string { return proto.CompactTextString(m) }
func (*ExchangeData) ProtoMessage()    {}
func (*ExchangeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_25379ce627d0c156, []int{6}
}

func (m *ExchangeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeData.Unmarshal(m, b)
}
func (m *ExchangeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeData.Marshal(b, m, deterministic)
}
func (m *ExchangeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeData.Merge(m, src)
}
func (m *ExchangeData) XXX_Size() int {
	return xxx_messageInfo_ExchangeData.Size(m)
}
func (m *ExchangeData) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeData.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeData proto.InternalMessageInfo

func (m *ExchangeData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ExchangeData) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type X509Result struct {
	Svid                 *types.X509SVID `protobuf:"bytes,1,opt,name=svid,proto3" json:"svid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *X509Result) Reset()         { *m = X509Result{} }
func (m *X509Result) String() string { return proto.CompactTextString(m) }
func (*X509Result) ProtoMessage()    {}
func (*X509Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_25379ce627d0c156, []int{7}
}

func (m *X509Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_X509Result.Unmarshal(m, b)
}
func (m *X509Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_X509Result.Marshal(b, m, deterministic)
}
func (m *X509Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_X509Result.Merge(m, src)
}
func (m *X509Result) XXX_Size() int {
	return xxx_messageInfo_X509Result.Size(m)
}
func (m *X509Result) XXX_DiscardUnknown() {
	xxx_messageInfo_X509Result.DiscardUnknown(m)
}

var xxx_messageInfo_X509Result proto.InternalMessageInfo

func (m *X509Result) GetSvid() *types.X509SVID {
	if m != nil {
		return m.Svid
	}
	return nil
}

type JWTResult struct {
	Svid                 *types.JWTSVID `protobuf:"bytes,1,opt,name=svid,proto3" json:"svid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *JWTResult) Reset()         { *m = JWTResult{} }
func (m *JWTResult) String() string { return proto.CompactTextString(m) }
func (*JWTResult) ProtoMessage()    {}
func (*JWTResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_25379ce627d0c156, []int{8}
}

func (m *JWTResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JWTResult.Unmarshal(m, b)
}
func (m *JWTResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JWTResult.Marshal(b, m, deterministic)
}
func (m *JWTResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JWTResult.Merge(m, src)
}
func (m *JWTResult) XXX_Size() int {
	return xxx_messageInfo_JWTResult.Size(m)
}
func (m *JWTResult) XXX_DiscardUnknown() {
	xxx_messageInfo_JWTResult.DiscardUnknown(m)
}

var xxx_messageInfo_JWTResult proto.InternalMessageInfo

func (m *JWTResult) GetSvid() *types.JWTSVID {
	if m != nil {
		return m.Svid
	}
	return nil
}

func init() {
	proto.RegisterType((*ExchangeRequest)(nil), "spire.api.server.identity.v1.ExchangeRequest")
	proto.RegisterType((*ExchangeRequest_Params)(nil), "spire.api.server.identity.v1.ExchangeRequest.Params")
	proto.RegisterType((*ExchangeResponse)(nil), "spire.api.server.identity.v1.ExchangeResponse")
	proto.RegisterType((*RenewRequest)(nil), "spire.api.server.identity.v1.RenewRequest")
	proto.RegisterType((*RenewResponse)(nil), "spire.api.server.identity.v1.RenewResponse")
	proto.RegisterType((*X509Request)(nil), "spire.api.server.identity.v1.X509Request")
	proto.RegisterType((*X509Request_X509SVIDParams)(nil), "spire.api.server.identity.v1.X509Request.X509SVIDParams")
	proto.RegisterType((*JWTRequest)(nil), "spire.api.server.identity.v1.JWTRequest")
	proto.RegisterType((*JWTRequest_JWTSVIDParams)(nil), "spire.api.server.identity.v1.JWTRequest.JWTSVIDParams")
	proto.RegisterType((*ExchangeData)(nil), "spire.api.server.identity.v1.ExchangeData")
	proto.RegisterType((*X509Result)(nil), "spire.api.server.identity.v1.X509Result")
	proto.RegisterType((*JWTResult)(nil), "spire.api.server.identity.v1.JWTResult")
}

func init() {
	proto.RegisterFile("spire/api/server/identity/v1/identity.proto", fileDescriptor_25379ce627d0c156)
}

var fileDescriptor_25379ce627d0c156 = []byte{
	// 599 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xee, 0x36, 0x69, 0x88, 0x27, 0x29, 0x54, 0x2b, 0x90, 0x82, 0x85, 0x50, 0xe5, 0x0b, 0x2e,
	0x15, 0x76, 0x5b, 0x5a, 0x7e, 0xc4, 0xcf, 0xa1, 0xb4, 0x22, 0xad, 0x04, 0xaa, 0x96, 0x08, 0x10,
	0x27, 0xb6, 0xc9, 0x36, 0x71, 0xe5, 0xd8, 0xc6, 0xbb, 0x49, 0x9a, 0x07, 0xe1, 0xc4, 0x2b, 0x70,
	0xe1, 0x45, 0xe0, 0x01, 0x78, 0x19, 0xb4, 0xbb, 0xfe, 0x4b, 0x40, 0xc1, 0x08, 0x0e, 0xdc, 0xc6,
	0x9e, 0xf9, 0xbe, 0xfd, 0xbe, 0x19, 0xef, 0x18, 0x36, 0x79, 0xe4, 0xc5, 0xcc, 0xa5, 0x91, 0xe7,
	0x72, 0x16, 0x8f, 0x59, 0xec, 0x7a, 0x3d, 0x16, 0x08, 0x4f, 0x4c, 0xdd, 0xf1, 0x76, 0x16, 0x3b,
	0x51, 0x1c, 0x8a, 0x10, 0xdf, 0x50, 0xc5, 0x0e, 0x8d, 0x3c, 0x47, 0x17, 0x3b, 0x59, 0xc1, 0x78,
	0xdb, 0x34, 0x35, 0x95, 0x98, 0x46, 0x8c, 0xbb, 0x17, 0x7b, 0x5b, 0x0f, 0xf9, 0xd8, 0xeb, 0x69,
	0xa4, 0x79, 0xbd, 0x98, 0x3b, 0x9f, 0x88, 0x3c, 0x65, 0x7d, 0x5d, 0x86, 0x2b, 0x87, 0x17, 0xdd,
	0x01, 0x0d, 0xfa, 0x8c, 0xb0, 0x0f, 0x23, 0xc6, 0x05, 0x7e, 0x09, 0xb5, 0x88, 0xc6, 0x74, 0xc8,
	0x5b, 0x68, 0x1d, 0xd9, 0x8d, 0x9d, 0x5d, 0x67, 0xd1, 0xc9, 0xce, 0x1c, 0xdc, 0x39, 0x51, 0xd8,
	0xf6, 0x12, 0x49, 0x58, 0xf0, 0x0b, 0x68, 0x48, 0x41, 0x49, 0xbe, 0xb5, 0xac, 0x48, 0x37, 0x16,
	0x93, 0xbe, 0xcd, 0x01, 0xed, 0x25, 0x52, 0xc4, 0xe3, 0x63, 0x80, 0xf3, 0x89, 0x48, 0xd9, 0x2a,
	0x8a, 0xcd, 0x5e, 0xcc, 0x76, 0xfc, 0xa6, 0x93, 0x93, 0x15, 0xd0, 0x66, 0x1b, 0x6a, 0x5a, 0x2e,
	0x7e, 0x0a, 0xd5, 0x1e, 0x15, 0x34, 0xb1, 0x7c, 0xbb, 0x9c, 0xe5, 0x03, 0x2a, 0x28, 0x51, 0xb8,
	0xfd, 0x1a, 0x54, 0xb9, 0x60, 0x91, 0xf5, 0x0d, 0xc1, 0x5a, 0xde, 0x11, 0x1e, 0x85, 0x01, 0x67,
	0x52, 0xb2, 0x76, 0xc0, 0x47, 0xbe, 0x48, 0x8e, 0xb0, 0xcb, 0x34, 0x40, 0xd6, 0x4b, 0xc9, 0x39,
	0x1a, 0x3f, 0x07, 0x43, 0x19, 0x50, 0x54, 0xba, 0x97, 0xb7, 0x4a, 0xb8, 0x4f, 0x98, 0x72, 0x2c,
	0xbe, 0x09, 0x46, 0x77, 0x40, 0x7d, 0x9f, 0x05, 0x7d, 0xa6, 0xda, 0xd8, 0x94, 0xf9, 0xec, 0x55,
	0xe6, 0xe8, 0x0b, 0x82, 0x26, 0x61, 0x01, 0x9b, 0xa4, 0x03, 0x98, 0x9b, 0x27, 0xfa, 0xa7, 0xf3,
	0x5c, 0xfe, 0x9b, 0x79, 0x66, 0x9a, 0x3f, 0x23, 0x58, 0x4d, 0x34, 0xff, 0xc7, 0x23, 0xc8, 0xe4,
	0x7e, 0x44, 0xd0, 0x28, 0x74, 0x08, 0x9f, 0xcc, 0xdd, 0xc0, 0x07, 0xa5, 0x9b, 0xab, 0xe2, 0x57,
	0xaf, 0x8f, 0x0e, 0xf4, 0x67, 0x9d, 0xde, 0x41, 0x73, 0x17, 0x2e, 0xcf, 0x66, 0xf0, 0x1a, 0x54,
	0xba, 0x3c, 0x56, 0x07, 0x34, 0x89, 0x0c, 0xe5, 0x1b, 0x21, 0x7c, 0x65, 0x68, 0x85, 0xc8, 0xd0,
	0xfa, 0x84, 0x00, 0xf2, 0x5e, 0xff, 0xb4, 0x18, 0xee, 0x95, 0x9d, 0x92, 0x0c, 0x7f, 0x21, 0xea,
	0x09, 0xac, 0xce, 0x24, 0xb0, 0x09, 0x75, 0x3a, 0xea, 0x79, 0x2c, 0xe8, 0xb2, 0x16, 0x5a, 0xaf,
	0xd8, 0x06, 0xc9, 0x9e, 0xa5, 0xba, 0x4e, 0xae, 0xae, 0x23, 0x7c, 0xeb, 0x31, 0x34, 0x8b, 0x17,
	0x11, 0x63, 0xa8, 0xca, 0x15, 0xa7, 0xc4, 0x19, 0x44, 0xc5, 0xb8, 0x05, 0x97, 0x22, 0x3a, 0xf5,
	0x43, 0xda, 0x53, 0x48, 0x83, 0xa4, 0x8f, 0xd6, 0x7d, 0x80, 0x7c, 0xc0, 0x78, 0x03, 0xaa, 0x72,
	0x2b, 0x26, 0xc6, 0xae, 0x25, 0xc6, 0xd4, 0xc6, 0xcc, 0x5a, 0x4a, 0x54, 0x89, 0xb5, 0x07, 0x46,
	0x36, 0x4e, 0x6c, 0xcf, 0xe0, 0xae, 0xce, 0xe0, 0x12, 0x6f, 0x1a, 0xb6, 0xf3, 0x1d, 0x41, 0xfd,
	0x28, 0xe9, 0x0e, 0x1e, 0x42, 0x3d, 0x95, 0x8e, 0xef, 0xfc, 0xd1, 0x7a, 0x35, 0x9d, 0xb2, 0xe5,
	0xfa, 0xc3, 0xb7, 0xd1, 0x16, 0xc2, 0xef, 0x61, 0x45, 0xdd, 0x06, 0xfc, 0x9b, 0xbd, 0x56, 0xbc,
	0xe6, 0xe6, 0x66, 0xa9, 0x5a, 0x7d, 0xca, 0xfe, 0xe1, 0xbb, 0x67, 0x7d, 0x4f, 0x0c, 0x46, 0xa7,
	0x4e, 0x37, 0x1c, 0xba, 0x3c, 0xf2, 0xce, 0xce, 0x98, 0xab, 0x7f, 0x3b, 0xea, 0x47, 0xe3, 0x2e,
	0xfa, 0xd3, 0x3d, 0x4a, 0xe3, 0xd3, 0x9a, 0x2a, 0xbe, 0xfb, 0x23, 0x00, 0x00, 0xff, 0xff, 0x1f,
	0x42, 0x07, 0xe8, 0x19, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IdentityClient is the client API for Identity service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IdentityClient interface {
	// Exchanges a SVID verifying identity via identity verification, using a bidirectional stream to
	// facilitate verification, it can returns a JWT or X509 SVID.
	Exchange(ctx context.Context, opts ...grpc.CallOption) (Identity_ExchangeClient, error)
	// Renews an identity and returns a new SVID.
	Renew(ctx context.Context, in *RenewRequest, opts ...grpc.CallOption) (*RenewResponse, error)
}

type identityClient struct {
	cc grpc.ClientConnInterface
}

func NewIdentityClient(cc grpc.ClientConnInterface) IdentityClient {
	return &identityClient{cc}
}

func (c *identityClient) Exchange(ctx context.Context, opts ...grpc.CallOption) (Identity_ExchangeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Identity_serviceDesc.Streams[0], "/spire.api.server.identity.v1.Identity/Exchange", opts...)
	if err != nil {
		return nil, err
	}
	x := &identityExchangeClient{stream}
	return x, nil
}

type Identity_ExchangeClient interface {
	Send(*ExchangeRequest) error
	Recv() (*ExchangeResponse, error)
	grpc.ClientStream
}

type identityExchangeClient struct {
	grpc.ClientStream
}

func (x *identityExchangeClient) Send(m *ExchangeRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *identityExchangeClient) Recv() (*ExchangeResponse, error) {
	m := new(ExchangeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *identityClient) Renew(ctx context.Context, in *RenewRequest, opts ...grpc.CallOption) (*RenewResponse, error) {
	out := new(RenewResponse)
	err := c.cc.Invoke(ctx, "/spire.api.server.identity.v1.Identity/Renew", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IdentityServer is the server API for Identity service.
type IdentityServer interface {
	// Exchanges a SVID verifying identity via identity verification, using a bidirectional stream to
	// facilitate verification, it can returns a JWT or X509 SVID.
	Exchange(Identity_ExchangeServer) error
	// Renews an identity and returns a new SVID.
	Renew(context.Context, *RenewRequest) (*RenewResponse, error)
}

// UnimplementedIdentityServer can be embedded to have forward compatible implementations.
type UnimplementedIdentityServer struct {
}

func (*UnimplementedIdentityServer) Exchange(srv Identity_ExchangeServer) error {
	return status.Errorf(codes.Unimplemented, "method Exchange not implemented")
}
func (*UnimplementedIdentityServer) Renew(ctx context.Context, req *RenewRequest) (*RenewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Renew not implemented")
}

func RegisterIdentityServer(s *grpc.Server, srv IdentityServer) {
	s.RegisterService(&_Identity_serviceDesc, srv)
}

func _Identity_Exchange_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(IdentityServer).Exchange(&identityExchangeServer{stream})
}

type Identity_ExchangeServer interface {
	Send(*ExchangeResponse) error
	Recv() (*ExchangeRequest, error)
	grpc.ServerStream
}

type identityExchangeServer struct {
	grpc.ServerStream
}

func (x *identityExchangeServer) Send(m *ExchangeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *identityExchangeServer) Recv() (*ExchangeRequest, error) {
	m := new(ExchangeRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Identity_Renew_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityServer).Renew(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.server.identity.v1.Identity/Renew",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityServer).Renew(ctx, req.(*RenewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Identity_serviceDesc = grpc.ServiceDesc{
	ServiceName: "spire.api.server.identity.v1.Identity",
	HandlerType: (*IdentityServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Renew",
			Handler:    _Identity_Renew_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Exchange",
			Handler:       _Identity_Exchange_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "spire/api/server/identity/v1/identity.proto",
}
