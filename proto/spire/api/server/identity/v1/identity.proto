syntax = "proto3";
package spire.api.server.identity.v1;
option go_package = "github.com/spiffe/spire/proto/spire/api/server/identity/v1;identity";

import "spire/types/x509svid.proto";
import "spire/types/jwtsvid.proto";

service Identity {
    // Exchanges a SVID verifying identity via identity verification, using a bidirectional stream to
    // facilitate verification, it can returns a JWT or X509 SVID.
    rpc Exchange(stream ExchangeRequest) returns (stream ExchangeResponse);
    
    // Renews an identity and returns a new SVID.
    rpc Renew(RenewRequest) returns (RenewResponse);
}

message ExchangeRequest {
    message Params {
        // The exchange data
        ExchangeData data = 1;
    }
    
    oneof step {
	// Exchange parameters. It contains data to verify caller identity 
        Params params = 1;
        
	// Request a X509-SVID, it contains all required information
        X509Request x509Request = 2;
        
	// Request a JWT-SVID. it contains all required information
        JWTRequest jwtRequest = 3;
    }
}

message ExchangeResponse {
    oneof step {
        // Exchanged X509-SVID
        X509Result x509Result = 1;
        
	// Exchanged JWT-SVID
        JWTResult jwtResult = 2;

        // Challenge to verify servers identity
        bytes challenge = 3;
    }
}

message RenewRequest {
    oneof step {
       // Request renew a X509-SVID, It contains SVID to renew.
       X509Request x509Request = 1;
       
       // Request renew a JWT-SVID, it contins the SVID to renew
       JWTRequest jwtRequest = 2;
    }
}

message RenewResponse {
    oneof step {
        // Renewed X509-SVID
        X509Result x509Result = 1;
        
        // Renewed JWT-SVID
        JWTResult jwtResult = 2;
    }
}

message X509Request {
    message X509SVIDParams {
    	// TODO: For both requests, how about provide an SPIFFE ID?
	bytes csr = 1;
	int32 ttl = 2;
    }
    X509SVIDParams params = 1;
}

message JWTRequest {
    message JWTSVIDParams {
    	// TODO: For both requests, how about provide an SPIFFE ID?
        repeated string audience = 1;
	int32 Ttl = 2;
    }
    JWTSVIDParams params = 1;
}

//  TODO: MOVE TO TYPES
message ExchangeData {
    // The type of the exchange data.
    string type = 1;
    
    // The exchanging data payload. For JWT it must include 
    string payload = 2;
}

message X509Result {
    spire.types.X509SVID svid = 1;
}

message JWTResult {
    spire.types.JWTSVID svid = 1;
}

